<aura:component
  implements="flexipage:availableForAllPageTypes"
  controller="Einstein_PlaygroundController"
  extends="EinsteinPlaygroundBase"
  access="global"
>

  <aura:attribute name="modelsByType" type="object" />
  <aura:attribute name="einsteinEmail" type="Boolean" />
  <aura:attribute name="einsteinCert" type="Boolean" />
  <aura:handler
    name="waitingEvent"
    event="c:EventEinsteinWaiting"
    action="{!c.changeSpinner}"
  />
  <aura:handler
    name="modelEvent"
    event="c:EventEinsteinModels"
    action="{!c.updateModelSelection}"
  />

  <aura:handler name="init" value="{!this}" action="{!c.doInitPlayground}" />

  <div>
    <lightning:tabset>
      <lightning:tab>
        <aura:set attribute="label">
          <lightning:icon iconName="utility:info" size="xx-small" /> Intro
        </aura:set>
        <c:EinsteinPlaygroundIntroduction />
      </lightning:tab>

      <lightning:tab>
        <aura:set attribute="label">
          <lightning:icon iconName="utility:preview" size="xx-small" /> Image
          Classification
        </aura:set>
        <c:einsteinGenericPlaygroundComponentLwc
          type="image"
          iconName="utility:preview"
          allModelsByType="{! v.modelsByType }"
        />
      </lightning:tab>

      <lightning:tab>
        <aura:set attribute="label">
          <lightning:icon
            iconName="utility:richtextbulletedlist"
            size="xx-small"
          />
          Image Classification (Multi)
        </aura:set>
        <c:einsteinGenericPlaygroundComponentLwc
          type="image-multi-label"
          iconName="utility:richtextbulletedlist"
          allModelsByType="{! v.modelsByType }"
        />
      </lightning:tab>

      <lightning:tab>
        <aura:set attribute="label">
          <lightning:icon iconName="utility:zoomin" size="xx-small" /> Object
          Detection
        </aura:set>
        <c:einsteinGenericPlaygroundComponentLwc
          type="image-detection"
          iconName="utility:like"
          allModelsByType="{! v.modelsByType }"
        />
      </lightning:tab>

	  <lightning:tab>
		<aura:set attribute="label">
		  <lightning:icon iconName="utility:quotation_marks" size="xx-small" /> OCR
		</aura:set>
		<!-- OCR does not support custom models so we only need the PredictionArea subtab -->
        <c:einsteinGenericPlaygroundComponentLwc
          type="ocr"
          iconName="utility:quotation_marks"
          allModelsByType="{! v.modelsByType }"
        />
	  </lightning:tab>

      <lightning:tab>
        <aura:set attribute="label">
          <lightning:icon iconName="utility:like" size="xx-small" /> Sentiment
        </aura:set>
        <c:einsteinGenericPlaygroundComponentLwc
          type="text-sentiment"
          iconName="utility:like"
          allModelsByType="{! v.modelsByType }"
        />
      </lightning:tab>

      <lightning:tab>
        <aura:set attribute="label">
          <lightning:icon iconName="utility:signpost" size="xx-small" /> Intent
        </aura:set>
        <c:einsteinGenericPlaygroundComponentLwc
          type="text-intent"
          iconName="utility:signpost"
          allModelsByType="{! v.modelsByType }"
        />
      </lightning:tab>
 
      <aura:if isTrue="{!v.featureCodeEnabled}">
        <lightning:tab>
            <aura:set attribute="label">
                <lightning:icon iconName="utility:picklist_type" size="xx-small" /> NER
            </aura:set>
            <!-- OCR does not support custom models so we only need the PredictionArea subtab -->
			<c:einsteinGenericPlaygroundComponentLwc
				type="text-ner"
				iconName="utility:picklist_type"
				allModelsByType="{! v.modelsByType }"
		  	/>
		  </lightning:tab>
      </aura:if>
    
    </lightning:tabset>

  </div>
</aura:component>